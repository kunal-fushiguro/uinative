[
    {
        "id": 1,
        "title": "Counter Ticker",
        "installation_cmd": "npm i react-native-reanimated",
        "code": "import { useEffect } from \"react\";\nimport { View, Text, StyleSheet, TextProps } from \"react-native\";\nimport Animated, {\n  useSharedValue,\n  withSpring,\n  useAnimatedStyle,\n} from \"react-native-reanimated\";\n\ninterface CounterTickerProps {\n  number: number;\n  fontSize?: number;\n}\n\nconst numberToSlice = [...new Array(10).keys()];\n\nconst CounterTicker = ({ number, fontSize = 30 }: CounterTickerProps) => {\n  const numbers = number.toString().split(\"\");\n  return (\n    <View style={styles.counterTrickerContainer}>\n      <Text style={{ fontSize: fontSize }}>$</Text>\n      {numbers.map((item, index) => {\n        return (\n          <TickerList\n            key={index * 2}\n            item={item.toString()}\n            fontSize={fontSize}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst TickerList = ({ item, fontSize }: { item: string; fontSize: number }) => {\n  const translateY = useSharedValue(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      translateY.value = withSpring(-fontSize * 1.1 * parseInt(item), {\n        damping: 10,\n        stiffness: 100,\n      });\n    }, 300);\n  }, [item]);\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateY: translateY.value }],\n  }));\n  return (\n    <View\n      style={{\n        width: 20,\n        height: fontSize,\n        alignItems: \"center\",\n      }}\n    >\n      <Animated.View style={animatedStyle}>\n        {numberToSlice.map((num, index) => {\n          return (\n            <Ticker\n              key={index}\n              style={{\n                fontSize: fontSize,\n                lineHeight: fontSize * 1.1,\n                fontVariant: [\"tabular-nums\"],\n              }}\n            >\n              {num}\n            </Ticker>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst Ticker = ({ children, ...rest }: TextProps) => {\n  return <Text {...rest}>{children}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  counterTrickerContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default CounterTicker;",
        "videoPath": "/videos/counterTricker.mp4",
        "file_name": "CounterTricker.tsx"
    },
    {
        "id": 2,
        "title": "Custom Bottom Tab",
        "videoPath": "/videos/customtabs.mp4",
        "file_name": "CustomTabBar.tsx",
        "installation_cmd": "npm i @react-navigation/stack react-native-gesture-handler @react-navigation/bottom-tabs",
        "code": "import { View, StyleSheet, Dimensions, Platform, Text } from 'react-native';\n import React from 'react';\nimport { BottomTabBarProps } from '@react-navigation/bottom-tabs';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { TouchableOpacity } from 'react-native';\n\nconst isIPhone = Platform.OS === 'ios';\n\nconst CustomBottamTabsFour = ({ state, descriptors, navigation }: BottomTabBarProps) => {\n    const Icons: Record<string, (isFocused: boolean) => JSX.Element> = {\n        Home: (isFocused: boolean) => <Entypo name='home' color={isFocused ? '#386BF6' : 'white'} size={isFocused ? 35 : 27} />,\n        Search: (isFocused: boolean) => <FontAwesome name='search' color={isFocused ? '#386BF6' : 'white'} size={isFocused ? 35 : 27} />,\n        Trending: (isFocused: boolean) => <MaterialIcons name='leaderboard' color={isFocused ? '#386BF6' : 'white'} size={isFocused ? 35 : 27} />,\n        Profile: (isFocused: boolean) => <FontAwesome name='user' color={isFocused ? '#386BF6' : 'white'} size={isFocused ? 35 : 27} />\n    };\n    return (\n        <View style={styles.container}>\n            {state.routes.map((route, index) => {\n                const { options } = descriptors[route.key];\n\n                const isActive = state.index === index;\n                const onPress = () => {\n                    const event = navigation.emit({\n                        type: 'tabPress',\n                        target: route.key,\n                        canPreventDefault: true,\n                    });\n\n                    if (!isActive && !event.defaultPrevented) {\n                        navigation.navigate(route.name, route.params);\n                    }\n                };\n\n                const onLongPress = () => {\n                    navigation.emit({\n                        type: 'tabLongPress',\n                        target: route.key,\n                    });\n                };\n                return (\n                    <TouchableOpacity\n                        accessibilityState={isActive ? { selected: true } : {}}\n                        accessibilityLabel={options.tabBarAccessibilityLabel}\n                        testID={options.tabBarButtonTestID}\n                        onPress={onPress}\n                        onLongPress={onLongPress}\n                        style={{\n                            height: '70%',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            width: 50,\n                            borderRadius: 10,\n                            flexDirection: 'column',\n                            gap: 10\n                        }}\n                        key={index}>\n                        {Icons[route.name](state.index === index)}\n                        <View style={{ display: isActive ? 'flex' : 'none', backgroundColor: '#386BF6', position: 'absolute', height: '70%', width: 90, bottom: -43, borderRadius: 19 }}></View>\n                    </TouchableOpacity>\n                );\n            })}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#1E1E1E',\n        width: Dimensions.get('screen').width - 30,\n        height: 80,\n        borderRadius: 19,\n        marginHorizontal: 'auto',\n        marginBottom: isIPhone ? 30 : 25,\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        gap: 10,\n        flexDirection: 'row',\n        overflow: 'hidden'\n    }\n});\n\nexport default CustomBottamTabsFour;"
    }
]

